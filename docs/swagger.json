{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple API to manage genealogical trees",
        "title": "Tree Genealogical API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/person": {
            "get": {
                "description": "List persons",
                "consumes": [
                    "application/json",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "tags": [
                    "person"
                ],
                "summary": "List persons",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by person's lasted name (no implemeted)",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/presenter.PersonResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a person",
                "consumes": [
                    "application/json",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Create a person",
                "parameters": [
                    {
                        "description": "Person",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presenter.PersonRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/presenter.PersonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    }
                }
            }
        },
        "/person/{id}": {
            "get": {
                "description": "Get a person",
                "consumes": [
                    "application/json",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Get a person",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Person ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenter.PersonResponse"
                        }
                    },
                    "404": {
                        "description": "Person not found",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a person",
                "consumes": [
                    "application/json",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Update a person",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Person ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Person",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presenter.PersonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenter.PersonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Person not found",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a person",
                "consumes": [
                    "application/json",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Delete a person",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Person ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Person not found",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    }
                }
            }
        },
        "/relationship": {
            "get": {
                "description": "List relationships",
                "consumes": [
                    "application/json",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "tags": [
                    "relationship"
                ],
                "summary": "List relationships",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/presenter.PaternityRelationshipResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a relationship",
                "consumes": [
                    "application/json",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "tags": [
                    "relationship"
                ],
                "summary": "Create a relationship",
                "parameters": [
                    {
                        "description": "Relationship",
                        "name": "relationship",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presenter.PaternityRelationshipRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/presenter.PaternityRelationshipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    }
                }
            }
        },
        "/relationship/{id}": {
            "get": {
                "description": "Get a relationship",
                "consumes": [
                    "application/json",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "tags": [
                    "relationship"
                ],
                "summary": "Get a relationship",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Relationship ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenter.PaternityRelationshipResponse"
                        }
                    },
                    "404": {
                        "description": "Relationship not found",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a relationship",
                "consumes": [
                    "application/json",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "tags": [
                    "relationship"
                ],
                "summary": "Update a relationship",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Relationship ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Relationship",
                        "name": "relationship",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presenter.PaternityRelationshipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenter.PaternityRelationshipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Relationship not found",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a relationship",
                "consumes": [
                    "application/json",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "tags": [
                    "relationship"
                ],
                "summary": "Delete a relationship",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Relationship ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Relationship not found",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gin.errorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "presenter.PaternityRelationshipRequest": {
            "type": "object",
            "required": [
                "child",
                "parent"
            ],
            "properties": {
                "child": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                }
            }
        },
        "presenter.PaternityRelationshipResponse": {
            "type": "object",
            "properties": {
                "child": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                }
            }
        },
        "presenter.PersonRequest": {
            "type": "object",
            "required": [
                "gender",
                "name"
            ],
            "properties": {
                "gender": {
                    "type": "string",
                    "enum": [
                        "F",
                        "M"
                    ]
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "presenter.PersonResponse": {
            "type": "object",
            "properties": {
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}